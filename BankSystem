/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package youtube;

import java.io.BufferedReader;
import java.io.InputStreamReader;

/**
 *
 * @author thushal
 */
public class BankProgram {
    
    public static void main(String[] args) throws Exception {
        BufferedReader bufferedReader=new BufferedReader (new InputStreamReader(System.in));
        int numberOfCustomers = 0;
        Bank bank=new Bank();
        Customer[] c=bank.getCustomer();
        System.err.println(bank.getCustomer());
        while(true)
        {
            System.out.println("Please Enter Your Choie");
            System.out.println("1: Add Customer");
            System.out.println("2: Deposit Money");
            System.out.println("3: Withdraw Money");
            System.out.println("4: Check Balance");
            System.out.println("5: Calculate Interest");
            System.out.println("6: Exit");
            int choice=Integer.parseInt(bufferedReader.readLine());
            switch (choice){
                case 1:
                    System.out.println("Creating an account for a new customer: ");
                    System.out.println("Please Enter the initial amount in your account: ");
                    double bal = Double.parseDouble(bufferedReader.readLine());
                    System.out.println("Please Enter Your Account Number: ");
                    String acc = bufferedReader.readLine();
                    Account account = new Account(bal,acc);
                    System.out.println("Please Enter your name: ");
                    String name = bufferedReader.readLine();
                    Customer customer = new Customer(name,account);
                    c[numberOfCustomers]=customer;
                    numberOfCustomers++;
                    break;
                case 2:
                    System.err.println("Enter Account Number");
                    acc=bufferedReader.readLine();
                    if(numberOfCustomers==0)
                    {
                        System.err.println("Account Number Not Found");
                    }
                    else
                    {
                        boolean found=false;
                        for (int i = 0; i < numberOfCustomers; i++) {
                            Account temp=c[i].getAccount();
                            String accTemp=temp.getAccountNumber();
                            if(accTemp.equals(acc))
                            {
                                System.err.println("Please Enter the Amount to Deposit: ");
                                double money=Double.parseDouble(bufferedReader.readLine());
                                temp.deposti(money);
                                found=true;
                            }
                        }
                        if (found==false) {
                            System.err.println("Account Number Not Found");
                        }
                    }
                    break;
                case 3:
                    System.err.println("Enter Account Number");
                    acc=bufferedReader.readLine();
                    if(numberOfCustomers==0)
                    {
                        System.err.println("Account Number Not Found");
                    }
                    else
                    {
                        boolean found=false;
                        for (int i = 0; i < numberOfCustomers; i++) {
                            Account temp=c[i].getAccount();
                            String accTemp=temp.getAccountNumber();
                            if(accTemp.equals(acc))
                            {
                                System.err.println("Please Enter the Amount to Withdraw: ");
                                double money=Double.parseDouble(bufferedReader.readLine());
                                temp.withdraw(money);
                                found=true;
                            }
                        }
                        if (found==false) {
                            System.err.println("Account Number Not Found");
                        }
                    }
                    break;
                case 4:
                    System.err.println("Enter Account Number");
                    acc=bufferedReader.readLine();
                    if(numberOfCustomers==0)
                    {
                        System.err.println("Account Number Not Found");
                    }
                    else
                    {
                        boolean found=false;
                        for (int i = 0; i < numberOfCustomers; i++) {
                            Account temp=c[i].getAccount();
                            String accTemp=temp.getAccountNumber();
                            if(accTemp.equals(acc))
                            {
                                System.err.println("Balance is: "+temp.getBalance());
                                found=true;
                            }
                        }
                        if (found==false) {
                            System.err.println("Account Number Not Found");
                        }
                    }
                    
                    break;
                case 5:
                    System.err.println("Enter Account Number");
                    acc=bufferedReader.readLine();
                    if(numberOfCustomers==0)
                    {
                        System.err.println("Account Number Not Found");
                    }
                    else
                    {
                        boolean found=false;
                        for (int i = 0; i < numberOfCustomers; i++) {
                            Account temp=c[i].getAccount();
                            String accTemp=temp.getAccountNumber();
                            if(accTemp.equals(acc))
                            {
                                bank.calculateInterest(c[i]);
                                found=true;
                            }
                        }
                        if (found==false) {
                            System.err.println("Account Number Not Found");
                        }
                    }
                    break;
                case 6:
                    System.exit(0);
                    break;
                
            }
        }
    }
    
}

class Bank 
{
    private double interestRate=8.5;
    private double transactionFees=10;
    private Customer[] customers = new Customer[1000];
    public void calculateInterest( Customer customer)
    {
        Account a=customer.getAccount();
        double bal=a.getBalance();
        double interestAmount=bal*interestRate/100;
        double totalBalance=bal+interestAmount;
        System.out.println("Interest amount "+interestAmount+" Total money after adding interest: "+totalBalance);
    }
    public double getInterestRate()
    {
        return interestRate;
    }
    public double getTranceactionFees()
    {
        return transactionFees;
    }
    public Customer[] getCustomer()
    {
        return customers;
    }
    
}
class Account
{
    private double balance=100;
    private String accountNumber;
    private boolean firstTime= true;
    
    public Account(String acc){
        accountNumber=acc;
    }
    public Account(double bal,String acc){
        if (bal>=100) {
           balance=bal; 
        } else {
            balance=100;
        }
        accountNumber=acc;
    }
    
    
    
   public void deposti(double howMuch)
   {
       if (howMuch>0) {
           balance=balance+howMuch;
           System.out.println(howMuch+" was sucessfully deposited in your account." + "The new balance of yor account is "+balance);
       } else {
           System.err.println("Please ensure the amount to be deposited is not negative."); 
       }
   }
   public void withdraw(double howMuch)
   {
       if (howMuch>0) {
           if (firstTime==true) {
               double tempBalance=balance;
               tempBalance=tempBalance-howMuch;
               if (tempBalance>=100) {
                   balance=balance-howMuch;
                   System.out.println(howMuch+" was sucessfully withdraw from your account." + "The new balance of yor account is "+balance);
               } else {
                   System.err.println("Insufficient balane to remove "+howMuch);
               }
               firstTime=false;
               
           } else {
               Bank bank=new Bank();
               double tempBalance=balance;
               tempBalance=tempBalance-howMuch-bank.getTranceactionFees();
               if (tempBalance>=100) {
                   balance=balance-howMuch-bank.getTranceactionFees();
               } else {
                   System.err.println("Insufficient balane tp remove "+howMuch);
               }
           }
           
       } else {
           System.err.println("Please ensure the amount to be withdrawn is not negative");
       }
   }
   public double getBalance()
   {
       return balance;
   }
   public String getAccountNumber()
   {
       return accountNumber;
   }
}
class Customer
{
   private String name;
   private Account account;

    public Customer(String n, Account a) {
        name = n;
        account = a;
    }
   
   public void display()
   {
       System.out.println("Name: "+name+",Account Number: "+account.getAccountNumber()+",Balance: "+account.getBalance());
   }
   public String getName()
   {
      return name; 
   }
   public Account getAccount()
   {
       return account;
   }
}
